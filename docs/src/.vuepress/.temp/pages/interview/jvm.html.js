export const data = JSON.parse("{\"key\":\"v-375ccf42\",\"path\":\"/interview/jvm.html\",\"title\":\"JVM 面试总结\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"JVM 面试总结\",\"icon\":\"java\",\"isOriginal\":true,\"date\":\"2022-08-07T00:11:00.000Z\",\"tag\":[\"面试\",\"JVM\",\"Java\"],\"category\":[\"面试宝典\"],\"summary\":\"JVM 内存区域？ JVM 定义及组成 JVM 是一种用于计算设备的规范，是一个虚构出来的计算机，通过在实体机上仿真模拟各种计算机功能来实现。JVM 运行在操作系统之上，与硬件之间并没有进行直接交互，这也就为什么 Java 语言只需要编译一次，就能够在不同平台上运行，通常有如下组成部分： 一组字节码指令集; 一组寄存器; 一个栈; 一个垃圾回收堆; 一个存储\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://cunyu1943.github.io/JavaPark/interview/jvm.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"JavaPark\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"JVM 面试总结\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"面试\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"JVM\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"Java\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2022-08-07T00:11:00.000Z\"}]]},\"excerpt\":\"\",\"headers\":[{\"level\":2,\"title\":\"JVM 内存区域？\",\"slug\":\"jvm-内存区域\",\"link\":\"#jvm-内存区域\",\"children\":[{\"level\":3,\"title\":\"JVM 定义及组成\",\"slug\":\"jvm-定义及组成\",\"link\":\"#jvm-定义及组成\",\"children\":[]},{\"level\":3,\"title\":\"JVM 功能\",\"slug\":\"jvm-功能\",\"link\":\"#jvm-功能\",\"children\":[]},{\"level\":3,\"title\":\"线程\",\"slug\":\"线程\",\"link\":\"#线程\",\"children\":[]},{\"level\":3,\"title\":\"Hotspot JVM 后台系统线程\",\"slug\":\"hotspot-jvm-后台系统线程\",\"link\":\"#hotspot-jvm-后台系统线程\",\"children\":[]},{\"level\":3,\"title\":\"深拷贝 vs 浅拷贝\",\"slug\":\"深拷贝-vs-浅拷贝\",\"link\":\"#深拷贝-vs-浅拷贝\",\"children\":[]},{\"level\":3,\"title\":\"堆和栈的区别\",\"slug\":\"堆和栈的区别\",\"link\":\"#堆和栈的区别\",\"children\":[]}]},{\"level\":2,\"title\":\"运行时数据区\",\"slug\":\"运行时数据区\",\"link\":\"#运行时数据区\",\"children\":[{\"level\":3,\"title\":\"内存划分\",\"slug\":\"内存划分\",\"link\":\"#内存划分\",\"children\":[]},{\"level\":3,\"title\":\"各内存区域功能\",\"slug\":\"各内存区域功能\",\"link\":\"#各内存区域功能\",\"children\":[]},{\"level\":3,\"title\":\"Java 7 和 Java 8 在内存模型上的区别\",\"slug\":\"java-7-和-java-8-在内存模型上的区别\",\"link\":\"#java-7-和-java-8-在内存模型上的区别\",\"children\":[]},{\"level\":3,\"title\":\"什么情况下会出现堆内存溢出？\",\"slug\":\"什么情况下会出现堆内存溢出\",\"link\":\"#什么情况下会出现堆内存溢出\",\"children\":[]}]},{\"level\":2,\"title\":\"GC 机制\",\"slug\":\"gc-机制\",\"link\":\"#gc-机制\",\"children\":[{\"level\":3,\"title\":\"什么是 GC？\",\"slug\":\"什么是-gc\",\"link\":\"#什么是-gc\",\"children\":[]},{\"level\":3,\"title\":\"Java 中的对象引用\",\"slug\":\"java-中的对象引用\",\"link\":\"#java-中的对象引用\",\"children\":[]},{\"level\":3,\"title\":\"判断对象是否为垃圾\",\"slug\":\"判断对象是否为垃圾\",\"link\":\"#判断对象是否为垃圾\",\"children\":[]},{\"level\":3,\"title\":\"需要 GC 的内存区域\",\"slug\":\"需要-gc-的内存区域\",\"link\":\"#需要-gc-的内存区域\",\"children\":[]},{\"level\":3,\"title\":\"回收垃圾对象内存的算法\",\"slug\":\"回收垃圾对象内存的算法\",\"link\":\"#回收垃圾对象内存的算法\",\"children\":[]},{\"level\":3,\"title\":\"垃圾回收器\",\"slug\":\"垃圾回收器\",\"link\":\"#垃圾回收器\",\"children\":[]}]},{\"level\":2,\"title\":\"Java 类加载机制\",\"slug\":\"java-类加载机制\",\"link\":\"#java-类加载机制\",\"children\":[{\"level\":3,\"title\":\"类的生命周期\",\"slug\":\"类的生命周期\",\"link\":\"#类的生命周期\",\"children\":[]},{\"level\":3,\"title\":\"JVM 加载类文件的原理\",\"slug\":\"jvm-加载类文件的原理\",\"link\":\"#jvm-加载类文件的原理\",\"children\":[]},{\"level\":3,\"title\":\"类加载过程\",\"slug\":\"类加载过程\",\"link\":\"#类加载过程\",\"children\":[]},{\"level\":3,\"title\":\"类加载过程中的具体分工\",\"slug\":\"类加载过程中的具体分工\",\"link\":\"#类加载过程中的具体分工\",\"children\":[]},{\"level\":3,\"title\":\"总结\",\"slug\":\"总结\",\"link\":\"#总结\",\"children\":[]},{\"level\":3,\"title\":\"类加载器\",\"slug\":\"类加载器\",\"link\":\"#类加载器\",\"children\":[]},{\"level\":3,\"title\":\"动态模型系统（OSGI）\",\"slug\":\"动态模型系统-osgi\",\"link\":\"#动态模型系统-osgi\",\"children\":[]}]},{\"level\":2,\"title\":\"内存分配策略\",\"slug\":\"内存分配策略\",\"link\":\"#内存分配策略\",\"children\":[{\"level\":3,\"title\":\"Minor GC vs Major GC\",\"slug\":\"minor-gc-vs-major-gc\",\"link\":\"#minor-gc-vs-major-gc\",\"children\":[]},{\"level\":3,\"title\":\"堆内存分配原则\",\"slug\":\"堆内存分配原则\",\"link\":\"#堆内存分配原则\",\"children\":[]},{\"level\":3,\"title\":\"新生代\",\"slug\":\"新生代\",\"link\":\"#新生代\",\"children\":[]},{\"level\":3,\"title\":\"老年代\",\"slug\":\"老年代\",\"link\":\"#老年代\",\"children\":[]},{\"level\":3,\"title\":\"永久代\",\"slug\":\"永久代\",\"link\":\"#永久代\",\"children\":[]}]},{\"level\":2,\"title\":\"JVM 调优\",\"slug\":\"jvm-调优\",\"link\":\"#jvm-调优\",\"children\":[{\"level\":3,\"title\":\"JVM 调优常用参数\",\"slug\":\"jvm-调优常用参数\",\"link\":\"#jvm-调优常用参数\",\"children\":[]},{\"level\":3,\"title\":\"JVM 调优步骤\",\"slug\":\"jvm-调优步骤\",\"link\":\"#jvm-调优步骤\",\"children\":[]}]}],\"readingTime\":{\"minutes\":34.07,\"words\":10221},\"copyright\":\"著作权归村雨遥所有\\n基于转载请注明以下信息：『作者：村雨遥，博客：https://cunyu1943.github.io/JavaPark』协议\\n原文链接：https://cunyu1943.github.io/JavaPark/interview/jvm.html\",\"filePathRelative\":\"interview/jvm.md\",\"localizedDate\":\"2022年8月7日\"}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
