const l=JSON.parse('{"key":"v-6413c026","path":"/interview/javapark.html","title":"JavaPark","lang":"zh-CN","frontmatter":{"title":"JavaPark","icon":"java","isOriginal":true,"date":"2022-08-07T00:11:00.000Z","tag":["面试","Java"],"category":["面试宝典"],"summary":"Java 基础 1. 为什么说 Java 是跨平台语言？ JVM 是 Java 跨平台的关键所在。在程序运行时，Java 源代码（后缀为 .java）经过编译器编译成字节码（后缀为 .class）。然后 JVM 负责将字节码翻译成特定平台下的机器码，这样一来计算机就能够识别并运行了。因此 JVM 才是核心，不同系统如 Windows、macOS、Linux ","head":[["meta",{"property":"og:url","content":"https://cunyu1943.github.io/JavaPark/interview/javapark.html"}],["meta",{"property":"og:site_name","content":"JavaPark"}],["meta",{"property":"og:title","content":"JavaPark"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2022-08-07T00:11:00.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"基础","slug":"基础","link":"#基础","children":[{"level":3,"title":"1. 为什么说 Java 是跨平台语言？","slug":"_1-为什么说-java-是跨平台语言","link":"#_1-为什么说-java-是跨平台语言","children":[]},{"level":3,"title":"2. 一个 Java 文件中是否可以含有多个类（内部类除外）？","slug":"_2-一个-java-文件中是否可以含有多个类-内部类除外","link":"#_2-一个-java-文件中是否可以含有多个类-内部类除外","children":[]},{"level":3,"title":"3. Java 的特点？","slug":"_3-java-的特点","link":"#_3-java-的特点","children":[]},{"level":3,"title":"4. Java 和 C++ 的区别？","slug":"_4-java-和-c-的区别","link":"#_4-java-和-c-的区别","children":[]},{"level":3,"title":"5. JDK 和 JRE 的区别？","slug":"_5-jdk-和-jre-的区别","link":"#_5-jdk-和-jre-的区别","children":[]},{"level":3,"title":"6. Java 程序的编译过程？","slug":"_6-java-程序的编译过程","link":"#_6-java-程序的编译过程","children":[]},{"level":3,"title":"7. Java 中的数据类型？","slug":"_7-java-中的数据类型","link":"#_7-java-中的数据类型","children":[]},{"level":3,"title":"8. 为什么要有封装类？","slug":"_8-为什么要有封装类","link":"#_8-为什么要有封装类","children":[]},{"level":3,"title":"9. 说一下 Java 中的访问权限？","slug":"_9-说一下-java-中的访问权限","link":"#_9-说一下-java-中的访问权限","children":[]},{"level":3,"title":"10. 成员变量和局部变量的区别？","slug":"_10-成员变量和局部变量的区别","link":"#_10-成员变量和局部变量的区别","children":[]},{"level":3,"title":"11. x = new Integer(123) 和 x = Integer.valueOf(123) 有什么区别？","slug":"_11-x-new-integer-123-和-x-integer-valueof-123-有什么区别","link":"#_11-x-new-integer-123-和-x-integer-valueof-123-有什么区别","children":[]},{"level":3,"title":"12. String、StringBuffer、StringBuilder 的区别？","slug":"_12-string、stringbuffer、stringbuilder-的区别","link":"#_12-string、stringbuffer、stringbuilder-的区别","children":[]},{"level":3,"title":"13. 为什么说 String 不可变，有什么优点？","slug":"_13-为什么说-string-不可变-有什么优点","link":"#_13-为什么说-string-不可变-有什么优点","children":[]},{"level":3,"title":"14. 面向对象的三大特征是什么？","slug":"_14-面向对象的三大特征是什么","link":"#_14-面向对象的三大特征是什么","children":[]},{"level":3,"title":"15. 封装有什么意义？","slug":"_15-封装有什么意义","link":"#_15-封装有什么意义","children":[]},{"level":3,"title":"16. 谈一谈对多态的理解？","slug":"_16-谈一谈对多态的理解","link":"#_16-谈一谈对多态的理解","children":[]},{"level":3,"title":"17. == 和 equals 的区别？","slug":"_17-和-equals-的区别","link":"#_17-和-equals-的区别","children":[]},{"level":3,"title":"18. hashCode 和 equals 的关系？","slug":"_18-hashcode-和-equals-的关系","link":"#_18-hashcode-和-equals-的关系","children":[]},{"level":3,"title":"19. final 关键字有什么作用？","slug":"_19-final-关键字有什么作用","link":"#_19-final-关键字有什么作用","children":[]},{"level":3,"title":"20. 重写和重载的区别？","slug":"_20-重写和重载的区别","link":"#_20-重写和重载的区别","children":[]},{"level":3,"title":"21. 接口和抽象类的的区别？","slug":"_21-接口和抽象类的的区别","link":"#_21-接口和抽象类的的区别","children":[]},{"level":3,"title":"什么是泛型？泛型擦除又是什么？","slug":"什么是泛型-泛型擦除又是什么","link":"#什么是泛型-泛型擦除又是什么","children":[]},{"level":3,"title":"泛型中 extends 和 super 的区别？","slug":"泛型中-extends-和-super-的区别","link":"#泛型中-extends-和-super-的区别","children":[]},{"level":3,"title":"反射机制是什么？","slug":"反射机制是什么","link":"#反射机制是什么","children":[]},{"level":3,"title":"什么是序列化？","slug":"什么是序列化","link":"#什么是序列化","children":[]}]},{"level":2,"title":"集合","slug":"集合","link":"#集合","children":[{"level":3,"title":"Java 中有哪些容器？","slug":"java-中有哪些容器","link":"#java-中有哪些容器","children":[]},{"level":3,"title":"Java 容器中线程安全和线程不安全分别有哪些？","slug":"java-容器中线程安全和线程不安全分别有哪些","link":"#java-容器中线程安全和线程不安全分别有哪些","children":[]},{"level":3,"title":"List 和 Set 的区别？","slug":"list-和-set-的区别","link":"#list-和-set-的区别","children":[]},{"level":3,"title":"Map 和 Set 的区别？","slug":"map-和-set-的区别","link":"#map-和-set-的区别","children":[]},{"level":3,"title":"ArrayList 和 LinkedList 之间的区别？","slug":"arraylist-和-linkedlist-之间的区别","link":"#arraylist-和-linkedlist-之间的区别","children":[]},{"level":3,"title":"List 有哪些是线程安全的？","slug":"list-有哪些是线程安全的","link":"#list-有哪些是线程安全的","children":[]},{"level":3,"title":"CopyOnWriteArrayList 的底层原理？","slug":"copyonwritearraylist-的底层原理","link":"#copyonwritearraylist-的底层原理","children":[]},{"level":3,"title":"如何得到一个线程安全的 Map?","slug":"如何得到一个线程安全的-map","link":"#如何得到一个线程安全的-map","children":[]},{"level":3,"title":"HashMap 的底层实现原理?","slug":"hashmap-的底层实现原理","link":"#hashmap-的底层实现原理","children":[]},{"level":3,"title":"JDK 1.7 和 JDK 1.8 中 HashMap 有什么变化？","slug":"jdk-1-7-和-jdk-1-8-中-hashmap-有什么变化","link":"#jdk-1-7-和-jdk-1-8-中-hashmap-有什么变化","children":[]},{"level":3,"title":"HashMap 扩容机制的原理？","slug":"hashmap-扩容机制的原理","link":"#hashmap-扩容机制的原理","children":[]},{"level":3,"title":"HashMap 中 Put 方法的原理？","slug":"hashmap-中-put-方法的原理","link":"#hashmap-中-put-方法的原理","children":[]},{"level":3,"title":"HashMap 中的循环链表是如何产生的？","slug":"hashmap-中的循环链表是如何产生的","link":"#hashmap-中的循环链表是如何产生的","children":[]},{"level":3,"title":"HashMap 和 HashTable 的区别？底层实现是什么？","slug":"hashmap-和-hashtable-的区别-底层实现是什么","link":"#hashmap-和-hashtable-的区别-底层实现是什么","children":[]},{"level":3,"title":"链表改为红黑树后，阈值为什么设置为 8？","slug":"链表改为红黑树后-阈值为什么设置为-8","link":"#链表改为红黑树后-阈值为什么设置为-8","children":[]},{"level":3,"title":"如何解决 Hash 冲突？HashMap 中用的哪一种？","slug":"如何解决-hash-冲突-hashmap-中用的哪一种","link":"#如何解决-hash-冲突-hashmap-中用的哪一种","children":[]},{"level":3,"title":"解决 Hash 冲突时，为什么不直接使用红黑树，而是需要先用链表，在转换为红黑树？","slug":"解决-hash-冲突时-为什么不直接使用红黑树-而是需要先用链表-在转换为红黑树","link":"#解决-hash-冲突时-为什么不直接使用红黑树-而是需要先用链表-在转换为红黑树","children":[]},{"level":3,"title":"HashMap 中的默认加载因子是多少？为什么是 0.75，而不是其他值？","slug":"hashmap-中的默认加载因子是多少-为什么是-0-75-而不是其他值","link":"#hashmap-中的默认加载因子是多少-为什么是-0-75-而不是其他值","children":[]},{"level":3,"title":"CopyOnWriteArrayList 的底层原理？","slug":"copyonwritearraylist-的底层原理-1","link":"#copyonwritearraylist-的底层原理-1","children":[]},{"level":3,"title":"ConcurrentHashMap 原理？JDK 1.7 和 JDK 1.8 中的区别？","slug":"concurrenthashmap-原理-jdk-1-7-和-jdk-1-8-中的区别","link":"#concurrenthashmap-原理-jdk-1-7-和-jdk-1-8-中的区别","children":[]},{"level":3,"title":"ConcurrentHashMap 的扩容机制？","slug":"concurrenthashmap-的扩容机制","link":"#concurrenthashmap-的扩容机制","children":[]},{"level":3,"title":"ConcurrentHashMap 是如何分段分组的？","slug":"concurrenthashmap-是如何分段分组的","link":"#concurrenthashmap-是如何分段分组的","children":[]},{"level":3,"title":"HashMap 和 ConcurrentHashMap 的区别？","slug":"hashmap-和-concurrenthashmap-的区别","link":"#hashmap-和-concurrenthashmap-的区别","children":[]},{"level":3,"title":"HashSet 的底层结构？","slug":"hashset-的底层结构","link":"#hashset-的底层结构","children":[]}]},{"level":2,"title":"IO","slug":"io","link":"#io","children":[{"level":3,"title":"介绍一下 Java 中常见的 IO 流？","slug":"介绍一下-java-中常见的-io-流","link":"#介绍一下-java-中常见的-io-流","children":[]},{"level":3,"title":"给你一个大文件，如何用流打开？","slug":"给你一个大文件-如何用流打开","link":"#给你一个大文件-如何用流打开","children":[]},{"level":3,"title":"说一下 NIO 的底层原理？","slug":"说一下-nio-的底层原理","link":"#说一下-nio-的底层原理","children":[]},{"level":3,"title":"什么是 Java 中的序列化和反序列化？","slug":"什么是-java-中的序列化和反序列化","link":"#什么是-java-中的序列化和反序列化","children":[]},{"level":3,"title":"Serializable 接口为什么需要定义 serialVersionUID 变量？","slug":"serializable-接口为什么需要定义-serialversionuid-变量","link":"#serializable-接口为什么需要定义-serialversionuid-变量","children":[]}]},{"level":2,"title":"异常","slug":"异常","link":"#异常","children":[{"level":3,"title":"Java 中的异常体系？","slug":"java-中的异常体系","link":"#java-中的异常体系","children":[]},{"level":3,"title":"如何解决异常？","slug":"如何解决异常","link":"#如何解决异常","children":[]}]},{"level":2,"title":"JVM","slug":"jvm","link":"#jvm","children":[{"level":3,"title":"什么是字节码？它有什么用？","slug":"什么是字节码-它有什么用","link":"#什么是字节码-它有什么用","children":[]},{"level":3,"title":"深拷贝和浅拷贝？","slug":"深拷贝和浅拷贝","link":"#深拷贝和浅拷贝","children":[]},{"level":3,"title":"JVM 内存结构？","slug":"jvm-内存结构","link":"#jvm-内存结构","children":[]},{"level":3,"title":"JVM 是怎么运行的？","slug":"jvm-是怎么运行的","link":"#jvm-是怎么运行的","children":[]},{"level":3,"title":"JVM 中的类加载器有哪些？","slug":"jvm-中的类加载器有哪些","link":"#jvm-中的类加载器有哪些","children":[]},{"level":3,"title":"JVM 参数有哪些？","slug":"jvm-参数有哪些","link":"#jvm-参数有哪些","children":[]},{"level":3,"title":"JVM 中的垃圾回收器？","slug":"jvm-中的垃圾回收器","link":"#jvm-中的垃圾回收器","children":[]},{"level":3,"title":"什么是 STW？","slug":"什么是-stw","link":"#什么是-stw","children":[]},{"level":3,"title":"Java 程序是如何运行起来的？","slug":"java-程序是如何运行起来的","link":"#java-程序是如何运行起来的","children":[]},{"level":3,"title":"说一下对象的实例化过程？","slug":"说一下对象的实例化过程","link":"#说一下对象的实例化过程","children":[]},{"level":3,"title":"说一下 Java 中的双亲委派模型？","slug":"说一下-java-中的双亲委派模型","link":"#说一下-java-中的双亲委派模型","children":[]},{"level":3,"title":"说一下 Java 的垃圾回收机制？","slug":"说一下-java-的垃圾回收机制","link":"#说一下-java-的垃圾回收机制","children":[]},{"level":3,"title":"如何判断对象可以被回收？","slug":"如何判断对象可以被回收","link":"#如何判断对象可以被回收","children":[]},{"level":3,"title":"一次完整的 GC 流程是怎样的？","slug":"一次完整的-gc-流程是怎样的","link":"#一次完整的-gc-流程是怎样的","children":[]},{"level":3,"title":"JVM 什么时候会触发 GC？如何减少 FullGC？","slug":"jvm-什么时候会触发-gc-如何减少-fullgc","link":"#jvm-什么时候会触发-gc-如何减少-fullgc","children":[]},{"level":3,"title":"说一下对 GC 算法的了解？","slug":"说一下对-gc-算法的了解","link":"#说一下对-gc-算法的了解","children":[]},{"level":3,"title":"内存泄漏和内存溢出的区别？","slug":"内存泄漏和内存溢出的区别","link":"#内存泄漏和内存溢出的区别","children":[]},{"level":3,"title":"介绍下四种引用类型？","slug":"介绍下四种引用类型","link":"#介绍下四种引用类型","children":[]},{"level":3,"title":"JVM 中有哪些是线程共享区？","slug":"jvm-中有哪些是线程共享区","link":"#jvm-中有哪些是线程共享区","children":[]},{"level":3,"title":"如何排查 JVM 问题？","slug":"如何排查-jvm-问题","link":"#如何排查-jvm-问题","children":[]}]},{"level":2,"title":"Spring","slug":"spring","link":"#spring","children":[{"level":3,"title":"什么是 AOP？","slug":"什么是-aop","link":"#什么是-aop","children":[]},{"level":3,"title":"什么是 IOC？","slug":"什么是-ioc","link":"#什么是-ioc","children":[]},{"level":3,"title":"Spring 支持的 Bean 作用域？","slug":"spring-支持的-bean-作用域","link":"#spring-支持的-bean-作用域","children":[]},{"level":3,"title":"Spring Bean 的生命周期？","slug":"spring-bean-的生命周期","link":"#spring-bean-的生命周期","children":[]},{"level":3,"title":"Spring 是如何解决循环依赖的？","slug":"spring-是如何解决循环依赖的","link":"#spring-是如何解决循环依赖的","children":[]},{"level":3,"title":"@Autowired 和 @Resource 的区别？","slug":"autowired-和-resource-的区别","link":"#autowired-和-resource-的区别","children":[]},{"level":3,"title":"Spring 中 Bean 是否是线程安全的？","slug":"spring-中-bean-是否是线程安全的","link":"#spring-中-bean-是否是线程安全的","children":[]},{"level":3,"title":"Spring 中的事务传播机制？","slug":"spring-中的事务传播机制","link":"#spring-中的事务传播机制","children":[]},{"level":3,"title":"Spring 事务在什么时候会失效？","slug":"spring-事务在什么时候会失效","link":"#spring-事务在什么时候会失效","children":[]},{"level":3,"title":"Spring 事务的实现方式和原理以及隔离级别？","slug":"spring-事务的实现方式和原理以及隔离级别","link":"#spring-事务的实现方式和原理以及隔离级别","children":[]},{"level":3,"title":"BeanFactory 和 ApplicationContext 的区别？","slug":"beanfactory-和-applicationcontext-的区别","link":"#beanfactory-和-applicationcontext-的区别","children":[]},{"level":3,"title":"Spring 中 @Transactional 什么时候会失效？","slug":"spring-中-transactional-什么时候会失效","link":"#spring-中-transactional-什么时候会失效","children":[]},{"level":3,"title":"Spring 容器的启动流程？","slug":"spring-容器的启动流程","link":"#spring-容器的启动流程","children":[]},{"level":3,"title":"Spring 中的设计模式？","slug":"spring-中的设计模式","link":"#spring-中的设计模式","children":[]},{"level":3,"title":"Spring MVC 的工作流程？","slug":"spring-mvc-的工作流程","link":"#spring-mvc-的工作流程","children":[]},{"level":3,"title":"Spring MVC 中的九大组件？","slug":"spring-mvc-中的九大组件","link":"#spring-mvc-中的九大组件","children":[]},{"level":3,"title":"Spring MVC 的拦截器？","slug":"spring-mvc-的拦截器","link":"#spring-mvc-的拦截器","children":[]},{"level":3,"title":"Spring MVC 常用注解？","slug":"spring-mvc-常用注解","link":"#spring-mvc-常用注解","children":[]},{"level":3,"title":"Spring Boot 中的 Starter 是什么？","slug":"spring-boot-中的-starter-是什么","link":"#spring-boot-中的-starter-是什么","children":[]},{"level":3,"title":"Spring Boot 的启动流程？","slug":"spring-boot-的启动流程","link":"#spring-boot-的启动流程","children":[]},{"level":3,"title":"Spring Boot 自动装配的过程？","slug":"spring-boot-自动装配的过程","link":"#spring-boot-自动装配的过程","children":[]},{"level":3,"title":"Spring Boot 中的常用注解及其底层原理？","slug":"spring-boot-中的常用注解及其底层原理","link":"#spring-boot-中的常用注解及其底层原理","children":[]},{"level":3,"title":"Spring Boot 是如何启动 Tomcat 的？","slug":"spring-boot-是如何启动-tomcat-的","link":"#spring-boot-是如何启动-tomcat-的","children":[]},{"level":3,"title":"Spring Boot 中配置文件的加载顺序？","slug":"spring-boot-中配置文件的加载顺序","link":"#spring-boot-中配置文件的加载顺序","children":[]}]},{"level":2,"title":"MyBatis","slug":"mybatis","link":"#mybatis","children":[{"level":3,"title":"MyBatis 的优缺点？","slug":"mybatis-的优缺点","link":"#mybatis-的优缺点","children":[]},{"level":3,"title":"MyBatis 和 Hibernate 的区别？","slug":"mybatis-和-hibernate-的区别","link":"#mybatis-和-hibernate-的区别","children":[]},{"level":3,"title":"MyBatis 和 JPA 的区别？","slug":"mybatis-和-jpa-的区别","link":"#mybatis-和-jpa-的区别","children":[]},{"level":3,"title":"MyBatis 输入输出支持的类型有哪些？","slug":"mybatis-输入输出支持的类型有哪些","link":"#mybatis-输入输出支持的类型有哪些","children":[]},{"level":3,"title":"MyBatis 如何实现一对多关联查询？","slug":"mybatis-如何实现一对多关联查询","link":"#mybatis-如何实现一对多关联查询","children":[]},{"level":3,"title":"说一下 MyBatis 的缓存机制？","slug":"说一下-mybatis-的缓存机制","link":"#说一下-mybatis-的缓存机制","children":[]},{"level":3,"title":"#{} 和 ${} 的区别？","slug":"和-的区别","link":"#和-的区别","children":[]}]},{"level":2,"title":"多线程并发","slug":"多线程并发","link":"#多线程并发","children":[{"level":3,"title":"1. 进程和线程的区别？","slug":"_1-进程和线程的区别","link":"#_1-进程和线程的区别","children":[]},{"level":3,"title":"2. 多线程的实现方式？","slug":"_2-多线程的实现方式","link":"#_2-多线程的实现方式","children":[]},{"level":3,"title":"volatile 的作用？其实现原理是啥？","slug":"volatile-的作用-其实现原理是啥","link":"#volatile-的作用-其实现原理是啥","children":[]},{"level":3,"title":"run() 和 start() 的区别？","slug":"run-和-start-的区别","link":"#run-和-start-的区别","children":[]},{"level":3,"title":"线程的生命周期及状态？","slug":"线程的生命周期及状态","link":"#线程的生命周期及状态","children":[]},{"level":3,"title":"如何实现线程同步？","slug":"如何实现线程同步","link":"#如何实现线程同步","children":[]},{"level":3,"title":"Java 多线程间的通信方式有哪些？","slug":"java-多线程间的通信方式有哪些","link":"#java-多线程间的通信方式有哪些","children":[]},{"level":3,"title":"wait()  和 sleep() 的区别？","slug":"wait-和-sleep-的区别","link":"#wait-和-sleep-的区别","children":[]},{"level":3,"title":"sleep()、wait()、join()、yield() 的区别？","slug":"sleep-、wait-、join-、yield-的区别","link":"#sleep-、wait-、join-、yield-的区别","children":[]},{"level":3,"title":"线程什么时候会发生阻塞？","slug":"线程什么时候会发生阻塞","link":"#线程什么时候会发生阻塞","children":[]},{"level":3,"title":"synchronized 的底层原理？","slug":"synchronized-的底层原理","link":"#synchronized-的底层原理","children":[]},{"level":3,"title":"synchronized 和 Lock 的区别？","slug":"synchronized-和-lock-的区别","link":"#synchronized-和-lock-的区别","children":[]},{"level":3,"title":"说一下你对线程安全的理解？","slug":"说一下你对线程安全的理解","link":"#说一下你对线程安全的理解","children":[]},{"level":3,"title":"Thread 和 Runnable 的区别？","slug":"thread-和-runnable-的区别","link":"#thread-和-runnable-的区别","children":[]},{"level":3,"title":"并发、并行、串行的区别？","slug":"并发、并行、串行的区别","link":"#并发、并行、串行的区别","children":[]},{"level":3,"title":"并发的三大特性？","slug":"并发的三大特性","link":"#并发的三大特性","children":[]},{"level":3,"title":"说一下乐观锁和悲观锁？","slug":"说一下乐观锁和悲观锁","link":"#说一下乐观锁和悲观锁","children":[]},{"level":3,"title":"公平锁和非公平锁是怎么实现的？","slug":"公平锁和非公平锁是怎么实现的","link":"#公平锁和非公平锁是怎么实现的","children":[]},{"level":3,"title":"Java 如何避免死锁？","slug":"java-如何避免死锁","link":"#java-如何避免死锁","children":[]},{"level":3,"title":"说一下 Java 中的锁升级？","slug":"说一下-java-中的锁升级","link":"#说一下-java-中的锁升级","children":[]},{"level":3,"title":"如何实现互斥锁？","slug":"如何实现互斥锁","link":"#如何实现互斥锁","children":[]},{"level":3,"title":"为什么要使用线程池？说一下常用的参数配置？","slug":"为什么要使用线程池-说一下常用的参数配置","link":"#为什么要使用线程池-说一下常用的参数配置","children":[]},{"level":3,"title":"线程池的底层工作原理？","slug":"线程池的底层工作原理","link":"#线程池的底层工作原理","children":[]},{"level":3,"title":"线程池中阻塞队列的作用？为什么要先添加队列而非创建最大线程？","slug":"线程池中阻塞队列的作用-为什么要先添加队列而非创建最大线程","link":"#线程池中阻塞队列的作用-为什么要先添加队列而非创建最大线程","children":[]},{"level":3,"title":"线程池线程复用的原理？","slug":"线程池线程复用的原理","link":"#线程池线程复用的原理","children":[]},{"level":3,"title":"线程池的拒绝策略？","slug":"线程池的拒绝策略","link":"#线程池的拒绝策略","children":[]},{"level":3,"title":"线程池的状态有哪些？","slug":"线程池的状态有哪些","link":"#线程池的状态有哪些","children":[]},{"level":3,"title":"ReentrantLock 中的公平锁和非公平锁的底层原理？","slug":"reentrantlock-中的公平锁和非公平锁的底层原理","link":"#reentrantlock-中的公平锁和非公平锁的底层原理","children":[]},{"level":3,"title":"ReentrantLock 中 tryLock() 和 lock() 的区别？","slug":"reentrantlock-中-trylock-和-lock-的区别","link":"#reentrantlock-中-trylock-和-lock-的区别","children":[]},{"level":3,"title":"CountDownLatch 和 Semaphore 的区别以及它们的底层原理？","slug":"countdownlatch-和-semaphore-的区别以及它们的底层原理","link":"#countdownlatch-和-semaphore-的区别以及它们的底层原理","children":[]},{"level":3,"title":"Sychronized 中的偏向锁、轻量级锁和重量级锁？","slug":"sychronized-中的偏向锁、轻量级锁和重量级锁","link":"#sychronized-中的偏向锁、轻量级锁和重量级锁","children":[]},{"level":3,"title":"Sychronized 和 ReentrantLock 的区别？","slug":"sychronized-和-reentrantlock-的区别","link":"#sychronized-和-reentrantlock-的区别","children":[]},{"level":3,"title":"说一下 ThreadLocal ？","slug":"说一下-threadlocal","link":"#说一下-threadlocal","children":[]}]},{"level":2,"title":"分布式","slug":"分布式","link":"#分布式","children":[{"level":3,"title":"说一下对分布式事务的理解？","slug":"说一下对分布式事务的理解","link":"#说一下对分布式事务的理解","children":[]},{"level":3,"title":"分布式系统是如何实现服务治理的？","slug":"分布式系统是如何实现服务治理的","link":"#分布式系统是如何实现服务治理的","children":[]},{"level":3,"title":"实现负载均衡的常用算法？","slug":"实现负载均衡的常用算法","link":"#实现负载均衡的常用算法","children":[]},{"level":3,"title":"分布式集群下是如何做到序列号唯一的？","slug":"分布式集群下是如何做到序列号唯一的","link":"#分布式集群下是如何做到序列号唯一的","children":[]},{"level":3,"title":"简述 CAP 理论？","slug":"简述-cap-理论","link":"#简述-cap-理论","children":[]},{"level":3,"title":"什么是 BASE 理论？","slug":"什么是-base-理论","link":"#什么是-base-理论","children":[]},{"level":3,"title":"如何理解 RPC？","slug":"如何理解-rpc","link":"#如何理解-rpc","children":[]},{"level":3,"title":"数据一致性模型有哪些？","slug":"数据一致性模型有哪些","link":"#数据一致性模型有哪些","children":[]}]},{"level":2,"title":"消息队列","slug":"消息队列","link":"#消息队列","children":[{"level":3,"title":"如何进行产品选型？","slug":"如何进行产品选型","link":"#如何进行产品选型","children":[]},{"level":3,"title":"简述 RabbitMQ 的架构设计？","slug":"简述-rabbitmq-的架构设计","link":"#简述-rabbitmq-的架构设计","children":[]},{"level":3,"title":"RabbitMQ 如何区别消息发送？消息接收？","slug":"rabbitmq-如何区别消息发送-消息接收","link":"#rabbitmq-如何区别消息发送-消息接收","children":[]},{"level":3,"title":"RabbitMQ 事务消息？","slug":"rabbitmq-事务消息","link":"#rabbitmq-事务消息","children":[]},{"level":3,"title":"RabbitMQ 死信队列？延时队列？","slug":"rabbitmq-死信队列-延时队列","link":"#rabbitmq-死信队列-延时队列","children":[]},{"level":3,"title":"RabbitMQ 镜像队列机制？","slug":"rabbitmq-镜像队列机制","link":"#rabbitmq-镜像队列机制","children":[]},{"level":3,"title":"Kafka 是什么？","slug":"kafka-是什么","link":"#kafka-是什么","children":[]},{"level":3,"title":"Kafka 为什么吞吐量高？","slug":"kafka-为什么吞吐量高","link":"#kafka-为什么吞吐量高","children":[]},{"level":3,"title":"Kafka 的 Pull 和 Push 分别有什么优缺点？","slug":"kafka-的-pull-和-push-分别有什么优缺点","link":"#kafka-的-pull-和-push-分别有什么优缺点","children":[]},{"level":3,"title":"Kafka 中的 ISR、AR 分别代表什么？ISR 的伸缩指什么？","slug":"kafka-中的-isr、ar-分别代表什么-isr-的伸缩指什么","link":"#kafka-中的-isr、ar-分别代表什么-isr-的伸缩指什么","children":[]}]},{"level":2,"title":"MySQL","slug":"mysql","link":"#mysql","children":[{"level":3,"title":"关系型数据库和非关系型数据库的区别？","slug":"关系型数据库和非关系型数据库的区别","link":"#关系型数据库和非关系型数据库的区别","children":[]},{"level":3,"title":"MySQL 语句的执行步骤？","slug":"mysql-语句的执行步骤","link":"#mysql-语句的执行步骤","children":[]},{"level":3,"title":"为什么要使用索引？","slug":"为什么要使用索引","link":"#为什么要使用索引","children":[]},{"level":3,"title":"索引的基本原理？","slug":"索引的基本原理","link":"#索引的基本原理","children":[]},{"level":3,"title":"索引的设计原则？","slug":"索引的设计原则","link":"#索引的设计原则","children":[]},{"level":3,"title":"什么是索引覆盖？","slug":"什么是索引覆盖","link":"#什么是索引覆盖","children":[]},{"level":3,"title":"什么是最左前缀原则？","slug":"什么是最左前缀原则","link":"#什么是最左前缀原则","children":[]},{"level":3,"title":"MySQL 中聚簇和非聚簇索引的区别？","slug":"mysql-中聚簇和非聚簇索引的区别","link":"#mysql-中聚簇和非聚簇索引的区别","children":[]},{"level":3,"title":"MySQL 中的索引结构，各自的优缺点在哪儿？","slug":"mysql-中的索引结构-各自的优缺点在哪儿","link":"#mysql-中的索引结构-各自的优缺点在哪儿","children":[]},{"level":3,"title":"事务的基本特性和隔离级别","slug":"事务的基本特性和隔离级别","link":"#事务的基本特性和隔离级别","children":[]},{"level":3,"title":"如何对 MySQL 进行分库分表？","slug":"如何对-mysql-进行分库分表","link":"#如何对-mysql-进行分库分表","children":[]},{"level":3,"title":"MySQL 主从同步原理？","slug":"mysql-主从同步原理","link":"#mysql-主从同步原理","children":[]},{"level":3,"title":"MyIsam 和 Innodb 的区别？","slug":"myisam-和-innodb-的区别","link":"#myisam-和-innodb-的区别","children":[]},{"level":3,"title":"MySQL 中的索引类型？它们对数据库的性能有什么影响？","slug":"mysql-中的索引类型-它们对数据库的性能有什么影响","link":"#mysql-中的索引类型-它们对数据库的性能有什么影响","children":[]},{"level":3,"title":"Explain 语句结构中各个字段分表表示什么？","slug":"explain-语句结构中各个字段分表表示什么","link":"#explain-语句结构中各个字段分表表示什么","children":[]},{"level":3,"title":"Innodb 是如何实现事务的？","slug":"innodb-是如何实现事务的","link":"#innodb-是如何实现事务的","children":[]},{"level":3,"title":"B 树和 B+ 树的区别？为什么 MySQL 使用的是 B+ 树？","slug":"b-树和-b-树的区别-为什么-mysql-使用的是-b-树","link":"#b-树和-b-树的区别-为什么-mysql-使用的是-b-树","children":[]},{"level":3,"title":"MySQL 中锁有哪些类型？","slug":"mysql-中锁有哪些类型","link":"#mysql-中锁有哪些类型","children":[]},{"level":3,"title":"如何优化 MySQL 慢查询？","slug":"如何优化-mysql-慢查询","link":"#如何优化-mysql-慢查询","children":[]},{"level":3,"title":"MySQL 中的 redo log 和 binlog 的区别？","slug":"mysql-中的-redo-log-和-binlog-的区别","link":"#mysql-中的-redo-log-和-binlog-的区别","children":[]},{"level":3,"title":"什么是两阶段提交？","slug":"什么是两阶段提交","link":"#什么是两阶段提交","children":[]},{"level":3,"title":"MySQL 如何保证数据不丢失？","slug":"mysql-如何保证数据不丢失","link":"#mysql-如何保证数据不丢失","children":[]},{"level":3,"title":"如何","slug":"如何","link":"#如何","children":[]}]},{"level":2,"title":"Redis","slug":"redis","link":"#redis","children":[{"level":3,"title":"Redis 怎么保证数据不丢失？","slug":"redis-怎么保证数据不丢失","link":"#redis-怎么保证数据不丢失","children":[]},{"level":3,"title":"简述 RDB 和 AOF 机制的实现原理？","slug":"简述-rdb-和-aof-机制的实现原理","link":"#简述-rdb-和-aof-机制的实现原理","children":[]},{"level":3,"title":"Redis 中针对过期键的删除策略？","slug":"redis-中针对过期键的删除策略","link":"#redis-中针对过期键的删除策略","children":[]},{"level":3,"title":"Redis 的线程模型?单线程为什么这么快？","slug":"redis-的线程模型-单线程为什么这么快","link":"#redis-的线程模型-单线程为什么这么快","children":[]},{"level":3,"title":"说一下 Redis 的事务实现？","slug":"说一下-redis-的事务实现","link":"#说一下-redis-的事务实现","children":[]},{"level":3,"title":"Redis 主从复制的核心原理？","slug":"redis-主从复制的核心原理","link":"#redis-主从复制的核心原理","children":[]},{"level":3,"title":"Redis 中常用的数据结构，有哪些典型应用场景？","slug":"redis-中常用的数据结构-有哪些典型应用场景","link":"#redis-中常用的数据结构-有哪些典型应用场景","children":[]},{"level":3,"title":"Redis 中分布式锁是如何实现的？","slug":"redis-中分布式锁是如何实现的","link":"#redis-中分布式锁是如何实现的","children":[]},{"level":3,"title":"Redis 中的主从同步机制？","slug":"redis-中的主从同步机制","link":"#redis-中的主从同步机制","children":[]},{"level":3,"title":"Redis 集群方案？","slug":"redis-集群方案","link":"#redis-集群方案","children":[]},{"level":3,"title":"Redis 中的缓存雪崩、缓存穿透、缓存击穿是什么？","slug":"redis-中的缓存雪崩、缓存穿透、缓存击穿是什么","link":"#redis-中的缓存雪崩、缓存穿透、缓存击穿是什么","children":[]},{"level":3,"title":"Reids 和 MySQL 如何保证数据一致？","slug":"reids-和-mysql-如何保证数据一致","link":"#reids-和-mysql-如何保证数据一致","children":[]},{"level":3,"title":"Redis 的持久化机制？","slug":"redis-的持久化机制","link":"#redis-的持久化机制","children":[]},{"level":3,"title":"Redis 如何设置 key 的过期时间？","slug":"redis-如何设置-key-的过期时间","link":"#redis-如何设置-key-的过期时间","children":[]},{"level":3,"title":"Redis 如何实现高可用？","slug":"redis-如何实现高可用","link":"#redis-如何实现高可用","children":[]}]},{"level":2,"title":"计算机网络","slug":"计算机网络","link":"#计算机网络","children":[{"level":3,"title":"1. cookie 和 session 的区别？","slug":"_1-cookie-和-session-的区别","link":"#_1-cookie-和-session-的区别","children":[]},{"level":3,"title":"什么是认证和授权？如何设计一个权限认证框架？","slug":"什么是认证和授权-如何设计一个权限认证框架","link":"#什么是认证和授权-如何设计一个权限认证框架","children":[]},{"level":3,"title":"如果没有 cookie 和 session，是否可以进行身份验证？","slug":"如果没有-cookie-和-session-是否可以进行身份验证","link":"#如果没有-cookie-和-session-是否可以进行身份验证","children":[]},{"level":3,"title":"CSFR 攻击是什么？如何防止？","slug":"csfr-攻击是什么-如何防止","link":"#csfr-攻击是什么-如何防止","children":[]},{"level":3,"title":"什么是 OAuth2.0 协议？有哪几种认证方式？","slug":"什么是-oauth2-0-协议-有哪几种认证方式","link":"#什么是-oauth2-0-协议-有哪几种认证方式","children":[]},{"level":3,"title":"session 的工作原理？","slug":"session-的工作原理","link":"#session-的工作原理","children":[]},{"level":3,"title":"epoll 和 poll 的区别？","slug":"epoll-和-poll-的区别","link":"#epoll-和-poll-的区别","children":[]},{"level":3,"title":"get 和 post 请求的区别？","slug":"get-和-post-请求的区别","link":"#get-和-post-请求的区别","children":[]},{"level":3,"title":"常见的网络状态码？","slug":"常见的网络状态码","link":"#常见的网络状态码","children":[]},{"level":3,"title":"浏览器发出一个请求和收到相应都经历了哪些步骤？","slug":"浏览器发出一个请求和收到相应都经历了哪些步骤","link":"#浏览器发出一个请求和收到相应都经历了哪些步骤","children":[]},{"level":3,"title":"跨域请求是什么？会遇到什么问题？如何解决？","slug":"跨域请求是什么-会遇到什么问题-如何解决","link":"#跨域请求是什么-会遇到什么问题-如何解决","children":[]},{"level":3,"title":"TCP 的三次握手和四次挥手？","slug":"tcp-的三次握手和四次挥手","link":"#tcp-的三次握手和四次挥手","children":[]}]},{"level":2,"title":"数据结构与算法","slug":"数据结构与算法","link":"#数据结构与算法","children":[]}],"git":{},"readingTime":{"minutes":30.81,"words":9243},"copyright":"著作权归村雨遥所有\\n基于转载请注明以下信息：『作者：村雨遥，博客：https://cunyu1943.github.io/JavaPark』协议\\n原文链接：https://cunyu1943.github.io/JavaPark/interview/javapark.html","filePathRelative":"interview/javapark.md","localizedDate":"2022年8月7日"}');export{l as data};
