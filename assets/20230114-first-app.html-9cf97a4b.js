import{_ as d,X as r,Y as a,Z as e,$ as o,a0 as n,a1 as t,D as i}from"./framework-dfc585d8.js";const p={},l=e("p",null,"作者：benjamin",-1),s={href:"https://benjam1n.eu.org",target:"_blank",rel:"noopener noreferrer"},_=t('<blockquote><p>吾生也有涯，而知也无涯。</p></blockquote><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p><code>Spring Boot</code> 能够帮助开发者创建独立的、可运行的、生产级的基于 <code>Spring</code> 的应用程序。通过基础的 <code>Spring</code> 平台和第三方库的组合，我们就能十分轻松地使用 <code>Spring Boot</code> 进行开发，而这些 <code>Spring Boot</code> 应用只需要简单的配置即可。</p><p>而通过 <code>Spring Boot</code> 创建后的 <code>Java</code> 程序我们既能够通过 <code>java -jar</code> 的方式对进行部署，也可以采取更为传统的部署 <code>war</code> 的方式。</p><p><code>Spring Boot</code> 的愿景是做到以下几点：</p><ol><li>为广大 <code>Spring</code> 开发者提供一个更快、更广泛的入门体验。</li><li>开箱即用，能够快速上手。</li><li>提供一系列大型项目中常见的非功能性特性，如嵌入式服安全性、健康监测等。</li><li>无需 <code>XML</code>  配置</li></ol><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>Spring Boot 3 已经发布好久了，在网上也看到了不少相关的教程，于是也想着取学习一下，顺便写写相关的内容。</p><p>一如既往的，我们从最学习编程最经典的入门程序 <code>Hello World</code> 开始，学习如何用 Spring Boot 3 来创建一个 <code>Hello World</code> 程序。</p><p>正式开始之前，既然我们要用 Spring Boot 3，那得先知道使用它的相关前提。要使用 Spring Boot 3，那么我们的 <code>JDK</code> 版本最低必须要 <code>Java 17</code>，同时 <code>Maven</code> 版本最低版本也必须是 <code>3.5+</code>。</p>',10);function h(g,u){const c=i("ExternalLinkIcon");return r(),a("div",null,[l,e("p",null,[o("博客："),e("a",s,[o("studio"),n(c)])]),_])}const f=d(p,[["render",h],["__file","20230114-first-app.html.vue"]]);export{f as default};
