import{_ as c,X as l,Y as i,Z as s,$ as n,a0 as a,a2 as e,a1 as u,D as o}from"./framework-dfc585d8.js";const k="/JavaPark/assets/totally-book-0deb7264.png",r="/JavaPark/assets/menu-1fc332d4.png",d="/JavaPark/assets/add-3a22187c.png",m="/JavaPark/assets/del-1b13db8a.png",v="/JavaPark/assets/update-fa7e630b.png",b="/JavaPark/assets/show-04490622.png",g="/JavaPark/assets/show-by-time-d69bc52e.png",h="/JavaPark/assets/show-by-type-1004a1f4.png",y="/JavaPark/assets/uit-4f0eaca1.png",f="/JavaPark/assets/structure-1ecc957e.png",q={},w=s("p",null,"作者：村雨遥",-1),_={href:"https://cunyu1943.github.io/JavaPark",target:"_blank",rel:"noopener noreferrer"},S=s("blockquote",null,[s("p",null,"吾生也有涯，而知也无涯。")],-1),x=s("hr",null,null,-1),j=s("h2",{id:"前言",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),n(" 前言")],-1),L=u('<p>接下来开始我们今天的正题，我们日常生活中，想必有很多人都有记账的习惯，那今天，我们就来看看，如何设计并实现一个记账本。</p><h2 id="需求分析" tabindex="-1"><a class="header-anchor" href="#需求分析" aria-hidden="true">#</a> 需求分析</h2><p>打开我们手机里的记账本，可以发现主要提供如下几个功能：</p><ol><li><p><strong>添加账目</strong></p></li><li><p><strong>删除账目</strong></p></li><li><p><strong>修改账目</strong></p></li><li><p><strong>查询账目</strong></p></li></ol><ul><li><ul><li>查询所有账目</li><li>按时间区间查询</li></ul></li><li><ul><li>按账目类型查询</li></ul></li></ul><ol><li><strong>退出记账本</strong></li></ol><p><img src="'+k+'" alt=""></p><h2 id="功能预览及代码实现" tabindex="-1"><a class="header-anchor" href="#功能预览及代码实现" aria-hidden="true">#</a> 功能预览及代码实现</h2><h3 id="主菜单" tabindex="-1"><a class="header-anchor" href="#主菜单" aria-hidden="true">#</a> 主菜单</h3><p>主菜单中，主要用于打印提示我们进行选择，然后根据我们的输入再进入不同的子功能模块中。</p><ul><li>预览</li></ul><p><img src="'+r+`" alt=""></p><ul><li>代码实现</li></ul><p>代码实现很简单，只需要打印出提示信息即可，之后后续输入以及进入不同子功能模块，我们可以使用 <code>switch</code> 来进行选择。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>cunyu</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Created with IntelliJ IDEA.
 *
 * <span class="token keyword">@author</span> : 村雨
 * <span class="token keyword">@version</span> : 1.0
 * <span class="token keyword">@project</span> : Java 实战
 * <span class="token keyword">@package</span> : com.cunyu
 * <span class="token keyword">@className</span> : MainApp
 * <span class="token keyword">@createTime</span> : 2021/8/1 7:22
 * <span class="token keyword">@email</span> : 747731461@qq.com
 * @公众号 : 村雨遥
 * <span class="token keyword">@website</span> : https://cunyu1943.github.io
 * <span class="token keyword">@description</span> :
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainApp</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----------欢迎使用记账系统--------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----------【1】添加账务----------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----------【2】删除账务----------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----------【3】修改账务----------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----------【4】查询账务----------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----------【0】退出-------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;请输入功能序号【0-4】&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;退出系统，期待下次见面 ~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加账目" tabindex="-1"><a class="header-anchor" href="#添加账目" aria-hidden="true">#</a> 添加账目</h3><p>当我们需要添加一笔新的账目时，此时就可以进入 <strong>添加账目</strong> 子模块，这里的功能主要是根据我们自己输入的 ID、类别、账户、类型、金额、时间以及备注将其添加到我们的总账目列表中进行汇总。</p><ul><li>预览</li></ul><p><img src="`+d+`" alt=""></p><ul><li>代码实现</li></ul><p>要实现添加功能也很简单，根据我们的输入，我们利用账目类的构造函数创建一个对象，然后将其加入总账目列表当中就可以了。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Bill</span><span class="token punctuation">&gt;</span></span> billList<span class="token punctuation">,</span> <span class="token keyword">int</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> category<span class="token punctuation">,</span> <span class="token class-name">String</span> account<span class="token punctuation">,</span> <span class="token class-name">String</span> type<span class="token punctuation">,</span> <span class="token keyword">double</span> amount<span class="token punctuation">,</span> <span class="token class-name">String</span> time<span class="token punctuation">,</span> <span class="token class-name">String</span> desc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//创建一个账单对象，然后将其加入列表</span>
    <span class="token class-name">Bill</span> bill <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bill</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> category<span class="token punctuation">,</span> account<span class="token punctuation">,</span> type<span class="token punctuation">,</span> amount<span class="token punctuation">,</span> time<span class="token punctuation">,</span> desc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    billList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bill<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除账目" tabindex="-1"><a class="header-anchor" href="#删除账目" aria-hidden="true">#</a> 删除账目</h3><p>假如我们的账目要公开给别人看，而自己有的账目又不想让别人看到，咋办呢？很简单！我们只需要将这笔账目干掉即可！这里我们只要输入我们所要删除的账单 ID，然后将其从总账目列表中删除即可。</p><ul><li>预览</li></ul><p><img src="`+m+`" alt=""></p><ul><li>代码实现</li></ul><p>要删除我们的账目，只需要根据我们输入的账单 id，找到对应 id 的账目，然后将其删除即可，这里之所以没有使用 <code>remove(index)</code> 的方式，是因为我们的 id 是自己输入的，这其实是不规则的，如果我们使用 <code>remove(index)</code> 的方式，就有可能导致越界的问题。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">del</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Bill</span><span class="token punctuation">&gt;</span></span> billList<span class="token punctuation">,</span> <span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//找到对应 id 的账单，并将其删除</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Bill</span> bill <span class="token operator">:</span> billList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>bill<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            billList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>bill<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改账目" tabindex="-1"><a class="header-anchor" href="#修改账目" aria-hidden="true">#</a> 修改账目</h3><p>我们偷偷拿了私房钱买了猛男必备显卡（RTX 3090）想趁空了打打游戏，遇到老婆查账时，这时候可不能慌，我们只需要把账单偷梁换柱，改换成其他东西就可以，而且此事神不知鬼不觉，美滋滋呀！</p><ul><li>预览</li></ul><p><img src="`+v+`" alt=""></p><ul><li>代码实现</li></ul><p>利用代码实现也很简单，找到对应 ID 的账单，然后重新输入账单各个细节进行修改即可！</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">modify</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Bill</span><span class="token punctuation">&gt;</span></span> billList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;输入你要修改对应账务的 ID&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> id <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;请输入修改后的账务类别&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> category <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;请输入修改后的账户&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> account <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;请输入修改后的类型（收入/支出）&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> type <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;请输入修改后的金额&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">double</span> amount <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;请输入修改后的时间&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> time <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;请输入修改后的备注&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> description <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//找到对应 id 的账单，然后修改对应信息</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Bill</span> bill <span class="token operator">:</span> billList<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>bill<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>

            bill<span class="token punctuation">.</span><span class="token function">setCategory</span><span class="token punctuation">(</span>category<span class="token punctuation">)</span><span class="token punctuation">;</span>
            bill<span class="token punctuation">.</span><span class="token function">setAmount</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
            bill<span class="token punctuation">.</span><span class="token function">setAccount</span><span class="token punctuation">(</span>account<span class="token punctuation">)</span><span class="token punctuation">;</span>
            bill<span class="token punctuation">.</span><span class="token function">setTime</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span>
            bill<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
            bill<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span>description<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查询账目" tabindex="-1"><a class="header-anchor" href="#查询账目" aria-hidden="true">#</a> 查询账目</h3><p>查询账目这里，我们又分为 3 个不同的功能，既可以查看所有账单，也可以根据我们所输入的时间区间进行筛选，最后，还能够根据我们的输入查询出收入和支出的详细情况。</p><h4 id="查询所有账目" tabindex="-1"><a class="header-anchor" href="#查询所有账目" aria-hidden="true">#</a> 查询所有账目</h4><ul><li>预览</li></ul><p><img src="`+b+`" alt=""></p><ul><li>代码实现</li></ul><p>查询所有账单很简单，只需要遍历我们总账单列表即可。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryAll</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Bill</span><span class="token punctuation">&gt;</span></span> billList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ID\\t\\t类别\\t\\t\\t账户\\t\\t类型\\t\\t金额\\t\\t\\t时间\\t\\t\\t\\t备注&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Bill</span> bill <span class="token operator">:</span> billList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bill<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t\\t&quot;</span> <span class="token operator">+</span> bill<span class="token punctuation">.</span><span class="token function">getCategory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t\\t&quot;</span> <span class="token operator">+</span> bill<span class="token punctuation">.</span><span class="token function">getAccount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t\\t&quot;</span> <span class="token operator">+</span> bill<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t\\t&quot;</span> <span class="token operator">+</span> bill<span class="token punctuation">.</span><span class="token function">getAmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t\\t&quot;</span> <span class="token operator">+</span> bill<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t\\t&quot;</span> <span class="token operator">+</span> bill<span class="token punctuation">.</span><span class="token function">getDesc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="按时间区间查询" tabindex="-1"><a class="header-anchor" href="#按时间区间查询" aria-hidden="true">#</a> 按时间区间查询</h4><ul><li>预览</li></ul><p><img src="`+g+`" alt=""></p><ul><li>代码实现</li></ul><p>按照时间跨度来查询稍微要麻烦一些，这里要处理两个输入，一个是开始时间，一个是结束时间，我们需要将账单的时间和这两个时间进行比较，筛选出介于这两者之间的账单。所以这里要涉及到 <code>Date</code> 类，然后就是如何从总账单列表中过滤出满足时间跨度的账单。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryByTime</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Bill</span><span class="token punctuation">&gt;</span></span> billList<span class="token punctuation">,</span> <span class="token class-name">String</span> startTime<span class="token punctuation">,</span> <span class="token class-name">String</span> endTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 时间格式化</span>
    <span class="token class-name">SimpleDateFormat</span> simpleDateFormat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Bill</span><span class="token punctuation">&gt;</span></span> bills <span class="token operator">=</span> billList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>bill <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> tmpTime <span class="token operator">=</span> bill<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// 将输入的时间字符串转换为格式化的 Date 类型</span>
            <span class="token class-name">Date</span> tmpDate <span class="token operator">=</span> simpleDateFormat<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>tmpTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Date</span> startDate <span class="token operator">=</span> simpleDateFormat<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>startTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Date</span> endDate <span class="token operator">=</span> simpleDateFormat<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>endTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 将介于开始时间和结束时间的账单进行过滤</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>tmpDate<span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span>endDate<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> tmpDate<span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span>startDate<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ParseException</span> parseException<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            parseException<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token comment">//    将其转换为列表</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">queryAll</span><span class="token punctuation">(</span>bills<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="按类型查询" tabindex="-1"><a class="header-anchor" href="#按类型查询" aria-hidden="true">#</a> 按类型查询</h4><ul><li>预览</li></ul><p><img src="`+h+`" alt=""></p><ul><li>代码实现</li></ul><p>这里按类型查询其实就是在查询所有账单的基础上加上一个限制条件，只要其类型等于我们的输入即可，这里我写了两种筛选的方法。一种是直接使用 <code>if</code> 语句进行过滤，而另一种则是同按时间跨度一样使用集合的 <code>Stream</code> 流来进行过滤。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryByType</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Bill</span><span class="token punctuation">&gt;</span></span> billList<span class="token punctuation">,</span> <span class="token class-name">String</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//1. 第一种方式，利用条件判断</span>
    <span class="token comment">//for (Bill bill : billList) {</span>
    <span class="token comment">//    if (bill.getType().equals(type)) {</span>
    <span class="token comment">//        System.out.println(bill.getId() + &quot;\\t\\t&quot; + bill.getCategory() + &quot;\\t\\t&quot; + bill.getAccount() + &quot;\\t\\t&quot; + bill.getType() + &quot;\\t\\t&quot; + bill.getAmount() + &quot;\\t\\t&quot; + bill.getTime() + &quot;\\t\\t&quot; + bill.getDesc());</span>
    <span class="token comment">//    }</span>
    <span class="token comment">//}</span>

    <span class="token comment">//2. 第二种方式，利用集合 Stream 流</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Bill</span><span class="token punctuation">&gt;</span></span> bills <span class="token operator">=</span> billList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>bill <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> tmpType <span class="token operator">=</span> bill<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> tmpType<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">queryAll</span><span class="token punctuation">(</span>bills<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="退出系统" tabindex="-1"><a class="header-anchor" href="#退出系统" aria-hidden="true">#</a> 退出系统</h3><ul><li>预览</li></ul><p><img src="`+y+`" alt=""></p><ul><li>代码实现</li></ul><p>在主菜单中，我们已经设置了一个标志位 <code>flag</code>，当 <code>flag</code> 为 <code>true</code> 时，我们每完成一项功能则循环打印主菜单在控制台中，而如果我们想要退出系统，只需要将标志位 <code>flag</code> 设置为 <code>false</code> 即可，此时不满足 <code>while</code> 循环的条件，所以跳出循环，因此退出系统的关键在于标志位状态的转换。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">case</span> <span class="token string">&quot;0&quot;</span><span class="token operator">:</span>
    flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="整体程序" tabindex="-1"><a class="header-anchor" href="#整体程序" aria-hidden="true">#</a> 整体程序</h2><p>将各个子模块功能实现之后，剩下的就是整合工作了，最后得到我们最后的总体程序结构如下，主要代码均位于 <code>com.cunyu</code> 包下，然后分别是：</p><ul><li><p>实体类 <code>Bill</code></p></li><li><p>接口类 <code>IBill</code></p></li><li><p>主程序 <code>MainApp</code></p></li></ul><p><img src="`+f+'" alt=""></p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2>',67),D={href:"https://github.com/cunyu1943/java-in-actions",target:"_blank",rel:"noopener noreferrer"},T=s("p",null,[n("最后，如果本文对大家有用的话，希望给我一个 ⭐ "),s("strong",null,"star"),n("，满足一下我的虚荣心呀 ~ 🙊🙊🙊")],-1);function B(A,I){const t=o("ExternalLinkIcon"),p=o("RouterLink");return l(),i("div",null,[w,s("p",null,[n("博客："),s("a",_,[n("JavaPark"),a(t)])]),S,x,j,s("p",null,[n("之前已经写过关于 "),a(p,{to:"/md/java/se-in-action/20220301-score-management.html"},{default:e(()=>[n("学生成绩管理系统")]),_:1}),n(" 以及 "),a(p,{to:"/md/java/se-in-action/20220302-order-system.html"},{default:e(()=>[n("点菜系统")]),_:1}),n(" 的文章，大家如果感兴趣，可以点击各自的传送门去看看呀！")]),L,s("p",null,[n("好了，以上就是我们简单的记账本的实现了。实现的功能比较简陋，程序的健壮性也不够强，还有很大的优化空间。大家如果感兴趣或者有优化的地方，欢迎到本设计的 Github 仓库地址："),s("a",D,[n("https://github.com/cunyu1943/java-in-actions"),a(t)]),n(" 提交 issue。当然了，如果你只是需要用来简单的做个示例，也可以自取。")]),T])}const P=c(q,[["render",B],["__file","20220303-tally-book.html.vue"]]);export{P as default};
