const e=JSON.parse('{"key":"v-277c9ca1","path":"/md/java/web/20220602-mockito-junit5.html","title":"Mockito + JUnit 单元测试实例","lang":"zh-CN","frontmatter":{"title":"Mockito + JUnit 单元测试实例","shortTitle":"Mockito + JUnit 单元测试","isOriginal":true,"order":5,"icon":"test","category":["Java Web"],"date":"2022-06-02T00:00:00.000Z","description":"作者：benjamin 博客：studio 吾生也有涯，而知也无涯。 前言 在日常 Java 开发中，一般都需要进行单元测试，而 Mock 测试则是单元测试中的重要方法之一。所谓 Mock 测试，就是指在测试过程中，对于一些不容易构造或难以获取的较为复杂的对象，用一个虚拟的对象来代表，从而方便测试的一种测试方法。其中，这个虚拟的对象就叫做 Mock 对象，最常见的就是用它来代表 Servlet 中 HttpServletRequest 对象，JDBC 中的 ResultSet 对象等。","head":[["meta",{"property":"og:url","content":"https://ez4jam1n.site/md/java/web/20220602-mockito-junit5.html"}],["meta",{"property":"og:site_name","content":"studio"}],["meta",{"property":"og:title","content":"Mockito + JUnit 单元测试实例"}],["meta",{"property":"og:description","content":"作者：benjamin 博客：studio 吾生也有涯，而知也无涯。 前言 在日常 Java 开发中，一般都需要进行单元测试，而 Mock 测试则是单元测试中的重要方法之一。所谓 Mock 测试，就是指在测试过程中，对于一些不容易构造或难以获取的较为复杂的对象，用一个虚拟的对象来代表，从而方便测试的一种测试方法。其中，这个虚拟的对象就叫做 Mock 对象，最常见的就是用它来代表 Servlet 中 HttpServletRequest 对象，JDBC 中的 ResultSet 对象等。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://ez4jam1n.site/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-10T11:23:15.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Mockito + JUnit 单元测试实例"}],["meta",{"property":"article:author","content":"benjamin"}],["meta",{"property":"article:published_time","content":"2022-06-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-10T11:23:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Mockito + JUnit 单元测试实例\\",\\"image\\":[\\"https://ez4jam1n.site/\\"],\\"datePublished\\":\\"2022-06-02T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-10T11:23:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"benjamin\\",\\"url\\":\\"https://ez4jam1n.site/studio\\",\\"email\\":\\"747731461@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"创建项目并添加依赖","slug":"创建项目并添加依赖","link":"#创建项目并添加依赖","children":[]},{"level":2,"title":"编写代码并测试","slug":"编写代码并测试","link":"#编写代码并测试","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1678429185000,"updatedTime":1681125795000,"contributors":[{"name":"村雨遥","email":"747731461@qq.com","commits":3},{"name":"EZ4Jam1n","email":"“1286884552@qq.com”","commits":2},{"name":"cunyu1943","email":"747731461@qq.com","commits":2}]},"readingTime":{"minutes":5.13,"words":1538},"filePathRelative":"md/java/web/20220602-mockito-junit5.md","localizedDate":"2022年6月2日","excerpt":"<p>作者：benjamin</p>\\n<p>博客：<a href=\\"https://benjam1n.eu.org\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">studio</a></p>\\n<blockquote>\\n<p>吾生也有涯，而知也无涯。</p>\\n</blockquote>\\n<hr>\\n<h2> 前言</h2>\\n<p>在日常 Java 开发中，一般都需要进行单元测试，而 <code>Mock</code> 测试则是单元测试中的重要方法之一。所谓 <code>Mock</code> 测试，就是指在测试过程中，对于一些不容易构造或难以获取的较为复杂的对象，用一个虚拟的对象来代表，从而方便测试的一种测试方法。其中，这个虚拟的对象就叫做 <code>Mock</code> 对象，最常见的就是用它来代表 <code>Servlet</code> 中 <code>HttpServletRequest</code> 对象，<code>JDBC</code> 中的 <code>ResultSet</code> 对象等。</p>","copyright":{"author":"benjamin","license":"转载请注明以下信息：『作者：benjamin，博客：https://ez4jam1n.site/studio』"},"autoDesc":true}');export{e as data};
