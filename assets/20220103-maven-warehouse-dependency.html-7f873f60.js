const e=JSON.parse('{"key":"v-adcff62e","path":"/md/java/maven/20220103-maven-warehouse-dependency.html","title":"仓库、坐标以及依赖管理","lang":"zh-CN","frontmatter":{"title":"仓库、坐标以及依赖管理","isOriginal":true,"order":10,"icon":"coordinate","category":["Maven 教程"],"date":"2022-01-03T00:00:00.000Z","description":"作者：村雨遥 博客：studio 吾生也有涯，而知也无涯。 前言 在我们创建使用 Maven 项目的过程中，当需要用到第三方的插件时，都是通过依赖管理来达成，也就是 Maven 项目中必有的 pom.xml 文件。POM（Project Object Model），即 项目对象模型，其中定义了 Maven 项目的形式。因此，pom.xml 可以看做是 Maven 项目中的导航。","head":[["meta",{"property":"og:url","content":"https://ez4jam1n.site/studio/md/java/maven/20220103-maven-warehouse-dependency.html"}],["meta",{"property":"og:site_name","content":"studio"}],["meta",{"property":"og:title","content":"仓库、坐标以及依赖管理"}],["meta",{"property":"og:description","content":"作者：村雨遥 博客：studio 吾生也有涯，而知也无涯。 前言 在我们创建使用 Maven 项目的过程中，当需要用到第三方的插件时，都是通过依赖管理来达成，也就是 Maven 项目中必有的 pom.xml 文件。POM（Project Object Model），即 项目对象模型，其中定义了 Maven 项目的形式。因此，pom.xml 可以看做是 Maven 项目中的导航。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-09T11:50:51.000Z"}],["meta",{"property":"article:author","content":"村雨遥"}],["meta",{"property":"article:published_time","content":"2022-01-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-09T11:50:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"仓库、坐标以及依赖管理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-03T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-09T11:50:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"村雨遥\\",\\"url\\":\\"https://ez4jam1n.site/studio\\",\\"email\\":\\"747731461@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"Maven 仓库","slug":"maven-仓库","link":"#maven-仓库","children":[]},{"level":2,"title":"Maven 坐标","slug":"maven-坐标","link":"#maven-坐标","children":[]},{"level":2,"title":"依赖冲突","slug":"依赖冲突","link":"#依赖冲突","children":[{"level":3,"title":"冲突产生原因","slug":"冲突产生原因","link":"#冲突产生原因","children":[]},{"level":3,"title":"解决冲突的办法","slug":"解决冲突的办法","link":"#解决冲突的办法","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1678429185000,"updatedTime":1681041051000,"contributors":[{"name":"村雨遥","email":"747731461@qq.com","commits":2},{"name":"EZ4Jam1n","email":"“1286884552@qq.com”","commits":1}]},"readingTime":{"minutes":4.52,"words":1356},"filePathRelative":"md/java/maven/20220103-maven-warehouse-dependency.md","localizedDate":"2022年1月3日","excerpt":"<p>作者：村雨遥</p>\\n<p>博客：<a href=\\"https://ez4jam1n.github.io/studio\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">studio</a></p>\\n<blockquote>\\n<p>吾生也有涯，而知也无涯。</p>\\n</blockquote>\\n<h2> 前言</h2>\\n<p>在我们创建使用 Maven 项目的过程中，当需要用到第三方的插件时，都是通过依赖管理来达成，也就是 Maven 项目中必有的 <code>pom.xml</code> 文件。POM（Project Object Model），即 <strong>项目对象模型</strong>，其中定义了 Maven 项目的形式。因此，<code>pom.xml</code> 可以看做是 Maven 项目中的导航。</p>","copyright":{"author":"村雨遥","license":"转载请注明以下信息：『作者：村雨遥，博客：https://ez4jam1n.site/studio』"},"autoDesc":true}');export{e as data};
