const e=JSON.parse('{"key":"v-413b519a","path":"/md/java/spring/20220202-ioc.html","title":"IoC 简介及入门实例","lang":"zh-CN","frontmatter":{"title":"IoC 简介及入门实例","isOriginal":true,"date":"2022-02-02T00:00:00.000Z","order":5,"icon":"xml","category":["Spring 教程"],"description":"作者：benjamin 博客：studio 吾生也有涯，而知也无涯。 IoC IoC（Inversion of Control），中文名又叫做控制反转。 针对当前书写代码时耦合度偏高的现状，大牛们提出了对应的解决方案。那就是在使用对象时，不要再通过主动使用 new 来创建对象，而是转变为由外部来提供对象。而这种将对象的创建控制权从程序转移到外部的思想就叫做控制反转。","head":[["meta",{"property":"og:url","content":"https://ez4jam1n.site/md/java/spring/20220202-ioc.html"}],["meta",{"property":"og:site_name","content":"studio"}],["meta",{"property":"og:title","content":"IoC 简介及入门实例"}],["meta",{"property":"og:description","content":"作者：benjamin 博客：studio 吾生也有涯，而知也无涯。 IoC IoC（Inversion of Control），中文名又叫做控制反转。 针对当前书写代码时耦合度偏高的现状，大牛们提出了对应的解决方案。那就是在使用对象时，不要再通过主动使用 new 来创建对象，而是转变为由外部来提供对象。而这种将对象的创建控制权从程序转移到外部的思想就叫做控制反转。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://ez4jam1n.site/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-10T11:23:15.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"IoC 简介及入门实例"}],["meta",{"property":"article:author","content":"benjamin"}],["meta",{"property":"article:published_time","content":"2022-02-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-10T11:23:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"IoC 简介及入门实例\\",\\"image\\":[\\"https://ez4jam1n.site/\\"],\\"datePublished\\":\\"2022-02-02T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-10T11:23:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"benjamin\\",\\"url\\":\\"https://ez4jam1n.site/studio\\",\\"email\\":\\"747731461@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"IoC","slug":"ioc","link":"#ioc","children":[]},{"level":2,"title":"DI","slug":"di","link":"#di","children":[]},{"level":2,"title":"入门案例","slug":"入门案例","link":"#入门案例","children":[{"level":3,"title":"传统方式","slug":"传统方式","link":"#传统方式","children":[]},{"level":3,"title":"IoC 方式","slug":"ioc-方式","link":"#ioc-方式","children":[]},{"level":3,"title":"DI 方式","slug":"di-方式","link":"#di-方式","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1678429185000,"updatedTime":1681125795000,"contributors":[{"name":"EZ4Jam1n","email":"“1286884552@qq.com”","commits":2},{"name":"村雨遥","email":"747731461@qq.com","commits":2},{"name":"cunyu1943","email":"747731461@qq.com","commits":1}]},"readingTime":{"minutes":4.32,"words":1295},"filePathRelative":"md/java/spring/20220202-ioc.md","localizedDate":"2022年2月2日","excerpt":"<p>作者：benjamin</p>\\n<p>博客：<a href=\\"https://benjam1n.eu.org\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">studio</a></p>\\n<blockquote>\\n<p>吾生也有涯，而知也无涯。</p>\\n</blockquote>\\n<hr>\\n<h2> IoC</h2>\\n<p>IoC（<code>Inversion of Control</code>），中文名又叫做控制反转。</p>\\n<p>针对当前书写代码时耦合度偏高的现状，大牛们提出了对应的解决方案。那就是在使用对象时，不要再通过主动使用 <code>new</code> 来创建对象，而是转变为由外部来提供对象。而这种将对象的创建控制权从程序转移到<strong>外部</strong>的思想就叫做<strong>控制反转</strong>。</p>","copyright":{"author":"benjamin","license":"转载请注明以下信息：『作者：benjamin，博客：https://ez4jam1n.site/studio』"},"autoDesc":true}');export{e as data};
