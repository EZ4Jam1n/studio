import{_ as e,X as o,Y as t,Z as s,$ as n,a0 as d,a1 as r,D as p}from"./framework-dfc585d8.js";const l={},c=s("p",null,"作者：benjamin",-1),i={href:"https://benjam1n.eu.org",target:"_blank",rel:"noopener noreferrer"},u=r(`<blockquote><p>吾生也有涯，而知也无涯。</p></blockquote><h2 id="多表关系" tabindex="-1"><a class="header-anchor" href="#多表关系" aria-hidden="true">#</a> 多表关系</h2><p>项目开发进行数据库表结构设计时，需要根据业务需求和业务模块之间的关系，分析并设计表结构。但由于不同业务之间存在着的关联关系，因此各个表结构之间也存在着各种关系，常见的表结构之间的关系可以分为以下三种：</p><ol><li>一对多（多对一）</li><li>多对多</li><li>一对一</li></ol><h3 id="一对多-多对一" tabindex="-1"><a class="header-anchor" href="#一对多-多对一" aria-hidden="true">#</a> 一对多（多对一）</h3><p>常见的就是部门和员工之间的关系，一个部门下边有多个员工，但是每个员工只能有一个部门。为了在数据库中实现这一关系，可以<strong>在多的一方建立外键，然后指向一的一方的主键。</strong></p><h3 id="多对多" tabindex="-1"><a class="header-anchor" href="#多对多" aria-hidden="true">#</a> 多对多</h3><p>最常见的有学生和课程之间的关系，每个学生可以选修多门课程，而一门课程也可以供多个学生选择。为了在数据库中实现这一关系，通常<strong>需要建立一个第三方的中间表，而且这个中间表应该至少包含两个外键，用于关联两方的主键。</strong></p><h3 id="一对一" tabindex="-1"><a class="header-anchor" href="#一对一" aria-hidden="true">#</a> 一对一</h3><p>最常见的是用户与用户详情之间的关系，多用于<strong>单表拆分</strong>，将一张表的基础字段放在一张表中，其他详情字段则放在另一张表中，从而提升操作效率。为了在数据库中实现这一关系，可以<strong>在任意一张表中加入外键，用来关联另一张表的主键，并且设置该外键唯一（<code>UNIQUE</code>）</strong>。</p><h2 id="多表查询" tabindex="-1"><a class="header-anchor" href="#多表查询" aria-hidden="true">#</a> 多表查询</h2><p>所谓多表查询，指的是从多张表中查询数据。</p><p>笛卡尔积：笛卡尔乘积指在数学中，两个集合 A 集合和 B 集合中的所有组合情况，在进行多表查询时，要注意消除掉无效的笛卡尔积。</p><p>多表查询可以分为<strong>子查询</strong>和连接查询，其中，连接查询又可以分为：<strong>内连接、外连接、自连接</strong>。</p><p>对于内连接，相当于查询两个表 A、B 之间的交集数据，即既存在表 A 中，也存在表 B 中的数据。</p><p>自连接表示当前表和它自身的连接查询，需要注意的是自连接查询时必须使用表别名。</p><p>最后是外连接，外连接可以分为<strong>左外连接和右外连接</strong>。其中，左外连接表示查询<strong>左表</strong>中的所有数据，以及左右两张表中的交集部分数据。</p><p>右外连接表示查询<strong>右表</strong>中的所有数据，以及左右两张表中的交集部分数据。</p><h2 id="内连接" tabindex="-1"><a class="header-anchor" href="#内连接" aria-hidden="true">#</a> 内连接</h2><p>内连接表示的是查询两张表的交集部分，其查询语法可以分为<strong>隐式内连接</strong>和<strong>显式内连接</strong>。</p><ol><li><strong>隐式内连接</strong></li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表<span class="token number">1</span><span class="token punctuation">,</span> 表<span class="token number">2</span> <span class="token keyword">WHERE</span> 条件 …<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li><strong>显式内连接</strong></li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token punctuation">[</span><span class="token keyword">INNER</span><span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 连接条件 …<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="外连接" tabindex="-1"><a class="header-anchor" href="#外连接" aria-hidden="true">#</a> 外连接</h2><p>外连接可以分为左外连接和右外连接，其查询语法如下。</p><ol><li><strong>左外连接</strong></li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token keyword">LEFT</span> <span class="token punctuation">[</span><span class="token keyword">OUTER</span><span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 条件 …<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li><strong>右外连接</strong></li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token keyword">RIGHT</span> <span class="token punctuation">[</span><span class="token keyword">OUTER</span><span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 条件 …<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="自连接" tabindex="-1"><a class="header-anchor" href="#自连接" aria-hidden="true">#</a> 自连接</h2><p>自查询查询语法如下，自连接查询既可以是内连接查询，也可以是外连接查询。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表A 别名A <span class="token keyword">JOIN</span> 表A 别名B <span class="token keyword">ON</span> 条件 …<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="联合查询" tabindex="-1"><a class="header-anchor" href="#联合查询" aria-hidden="true">#</a> 联合查询</h2><p>联合查询，顾名思义，就是把多次查询的结果合并，从而形成一个新的查询结果集的查询。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表A ……
<span class="token keyword">UNION</span> <span class="token punctuation">[</span><span class="token keyword">ALL</span><span class="token punctuation">]</span>
<span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表B ……
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="子查询" tabindex="-1"><a class="header-anchor" href="#子查询" aria-hidden="true">#</a> 子查询</h2><p>子查询指 SQL 语句中嵌套 <code>SELECT</code> 语句，所有又叫做<strong>嵌套查询</strong>。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token keyword">WHERE</span> 字段名 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> 字段名 <span class="token keyword">FROM</span> 表<span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>子查询返回的结果是一列（也可以是多列），这种子查询叫做<strong>列子查询</strong>。</p><p>常用的操作符有：<code>IN</code>、<code>NOT IN</code>、<code>ANY</code>、<code>SOME</code>、<code>ALL</code></p><table><thead><tr><th>操作符</th><th>说明</th></tr></thead><tbody><tr><td><code>IN</code></td><td>在指定集合范围内，多选一</td></tr><tr><td><code>NOT IN</code></td><td>不在指定集合范围内</td></tr><tr><td><code>ANY</code></td><td>子查询返回列表中，有任一满足即可</td></tr><tr><td><code>SOME</code></td><td>等同于 <code>ANY</code>，可以用 <code>ANY</code> 代替</td></tr><tr><td><code>ALL</code></td><td>子查询返回列表的所有值都必须满足</td></tr></tbody></table><p>子查询返回的结果是一行（可以是多列），这种子查询叫做<strong>行子查询</strong>。</p><p>常用的操作符有：<code>=</code>、<code>&lt;&gt;</code>、<code>IN</code>、<code>NOT IN</code></p><p>若子查询返回的结果是多行多列，那么这种子查询叫做<strong>表子查询</strong>，常用操作符为：<code>IN</code>。</p>`,45);function k(h,g){const a=p("ExternalLinkIcon");return o(),t("div",null,[c,s("p",null,[n("博客："),s("a",i,[n("studio"),d(a)])]),u])}const m=e(l,[["render",k],["__file","20220306-muti-table-query.html.vue"]]);export{m as default};
