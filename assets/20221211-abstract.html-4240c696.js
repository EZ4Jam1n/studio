const e=JSON.parse('{"key":"v-1fd2fcf8","path":"/md/java/se/20221211-abstract.html","title":"抽象、接口和内部类","lang":"zh-CN","frontmatter":{"title":"抽象、接口和内部类","icon":"abstract","isOriginal":true,"category":["Java 基础教程"],"date":"2022-12-11T00:00:00.000Z","order":52,"description":"作者：村雨遥 博客：JavaPark 吾生也有涯，而知也无涯。 抽象方法 定义 所谓抽象方法，就是将公共的行为（方法）抽取到一个父类后，由于每个子类中执行的内容是不一致的，所以父类中无法确认具体的方法体，此时就可以将该方法定义为抽象方法。 格式","head":[["meta",{"property":"og:url","content":"https://cunyu1943.site/JavaPark/md/java/se/20221211-abstract.html"}],["meta",{"property":"og:site_name","content":"JavaPark"}],["meta",{"property":"og:title","content":"抽象、接口和内部类"}],["meta",{"property":"og:description","content":"作者：村雨遥 博客：JavaPark 吾生也有涯，而知也无涯。 抽象方法 定义 所谓抽象方法，就是将公共的行为（方法）抽取到一个父类后，由于每个子类中执行的内容是不一致的，所以父类中无法确认具体的方法体，此时就可以将该方法定义为抽象方法。 格式"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-22T07:22:12.000Z"}],["meta",{"property":"article:author","content":"村雨遥"}],["meta",{"property":"article:published_time","content":"2022-12-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-22T07:22:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"抽象、接口和内部类\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-12-11T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-22T07:22:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"村雨遥\\",\\"url\\":\\"https://cunyu1943.site/JavaPark\\",\\"email\\":\\"747731461@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"抽象方法","slug":"抽象方法","link":"#抽象方法","children":[{"level":3,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":3,"title":"格式","slug":"格式","link":"#格式","children":[]}]},{"level":2,"title":"抽象类","slug":"抽象类","link":"#抽象类","children":[{"level":3,"title":"定义","slug":"定义-1","link":"#定义-1","children":[]},{"level":3,"title":"格式","slug":"格式-1","link":"#格式-1","children":[]},{"level":3,"title":"注意","slug":"注意","link":"#注意","children":[]},{"level":3,"title":"作用","slug":"作用","link":"#作用","children":[]}]},{"level":2,"title":"接口","slug":"接口","link":"#接口","children":[{"level":3,"title":"定义","slug":"定义-2","link":"#定义-2","children":[]},{"level":3,"title":"格式","slug":"格式-2","link":"#格式-2","children":[]},{"level":3,"title":"注意","slug":"注意-1","link":"#注意-1","children":[]},{"level":3,"title":"成员的特点","slug":"成员的特点","link":"#成员的特点","children":[]},{"level":3,"title":"默认方法","slug":"默认方法","link":"#默认方法","children":[]},{"level":3,"title":"静态方法","slug":"静态方法","link":"#静态方法","children":[]},{"level":3,"title":"私有方法","slug":"私有方法","link":"#私有方法","children":[]},{"level":3,"title":"接口和类之间的关系","slug":"接口和类之间的关系","link":"#接口和类之间的关系","children":[]}]},{"level":2,"title":"内部类","slug":"内部类","link":"#内部类","children":[{"level":3,"title":"定义","slug":"定义-3","link":"#定义-3","children":[]},{"level":3,"title":"特点","slug":"特点","link":"#特点","children":[]},{"level":3,"title":"分类","slug":"分类","link":"#分类","children":[]}]}],"git":{"createdTime":1678429185000,"updatedTime":1679469732000,"contributors":[{"name":"村雨遥","email":"747731461@qq.com","commits":3}]},"readingTime":{"minutes":7.99,"words":2398},"filePathRelative":"md/java/se/20221211-abstract.md","localizedDate":"2022年12月11日","excerpt":"<p>作者：村雨遥</p>\\n<p>博客：<a href=\\"https://cunyu1943.github.io/JavaPark\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">JavaPark</a></p>\\n<blockquote>\\n<p>吾生也有涯，而知也无涯。</p>\\n</blockquote>\\n<h2> 抽象方法</h2>\\n<h3> 定义</h3>\\n<p>所谓抽象方法，就是将公共的行为（方法）抽取到一个父类后，由于每个子类中执行的内容是不一致的，所以父类中无法确认具体的方法体，此时就可以将该方法定义为抽象方法。</p>\\n<h3> 格式</h3>","copyright":{"author":"村雨遥","license":"转载请注明以下信息：『作者：村雨遥，博客：https://cunyu1943.site/JavaPark』"},"autoDesc":true}');export{e as data};
