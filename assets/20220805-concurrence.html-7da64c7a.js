const e=JSON.parse('{"key":"v-525b1a22","path":"/md/interview/20220805-concurrence.html","title":"Java 并发面试总结","lang":"zh-CN","frontmatter":{"title":"Java 并发面试总结","isOriginal":true,"shortTitle":"并发","icon":"concurrency","date":"2022-08-05T00:00:00.000Z","category":"面试宝典","order":5,"description":"作者：村雨遥 博客：JavaPark 吾生也有涯，而知也无涯。 进程和线程 进程 进程是系统中正在运行的一个程序，是 资源分配的基本单位，每个进程都有独立的地址空间。 进程控制块（Process Control Block，PCB）描述了进程的基本信息和运行状态，所谓的创建和撤销进程，都是指对于 PCB 的操作；","head":[["meta",{"property":"og:url","content":"https://cunyu1943.site/JavaPark/md/interview/20220805-concurrence.html"}],["meta",{"property":"og:site_name","content":"JavaPark"}],["meta",{"property":"og:title","content":"Java 并发面试总结"}],["meta",{"property":"og:description","content":"作者：村雨遥 博客：JavaPark 吾生也有涯，而知也无涯。 进程和线程 进程 进程是系统中正在运行的一个程序，是 资源分配的基本单位，每个进程都有独立的地址空间。 进程控制块（Process Control Block，PCB）描述了进程的基本信息和运行状态，所谓的创建和撤销进程，都是指对于 PCB 的操作；"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cunyu1943.site/JavaPark/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-14T06:01:17.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Java 并发面试总结"}],["meta",{"property":"article:author","content":"村雨遥"}],["meta",{"property":"article:published_time","content":"2022-08-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-14T06:01:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 并发面试总结\\",\\"image\\":[\\"https://cunyu1943.site/JavaPark/\\"],\\"datePublished\\":\\"2022-08-05T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-14T06:01:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"村雨遥\\",\\"url\\":\\"https://cunyu1943.site/JavaPark\\",\\"email\\":\\"747731461@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"进程和线程","slug":"进程和线程","link":"#进程和线程","children":[{"level":3,"title":"进程","slug":"进程","link":"#进程","children":[]},{"level":3,"title":"线程","slug":"线程","link":"#线程","children":[]},{"level":3,"title":"进程和线程的区别？","slug":"进程和线程的区别","link":"#进程和线程的区别","children":[]},{"level":3,"title":"线程分类","slug":"线程分类","link":"#线程分类","children":[]}]},{"level":2,"title":"如何创建线程实例并运行","slug":"如何创建线程实例并运行","link":"#如何创建线程实例并运行","children":[{"level":3,"title":"创建 Thread 的子类并重写 run()","slug":"创建-thread-的子类并重写-run","link":"#创建-thread-的子类并重写-run","children":[]},{"level":3,"title":"实现 Runnable 接口","slug":"实现-runnable-接口","link":"#实现-runnable-接口","children":[]}]},{"level":2,"title":"Runnable vs Callable","slug":"runnable-vs-callable","link":"#runnable-vs-callable","children":[{"level":3,"title":"Runnable","slug":"runnable","link":"#runnable","children":[]},{"level":3,"title":"Callable","slug":"callable","link":"#callable","children":[]}]},{"level":2,"title":"并发 vs 并行","slug":"并发-vs-并行","link":"#并发-vs-并行","children":[{"level":3,"title":"并发","slug":"并发","link":"#并发","children":[]},{"level":3,"title":"并行","slug":"并行","link":"#并行","children":[]}]},{"level":2,"title":"4 种线程池","slug":"_4-种线程池","link":"#_4-种线程池","children":[{"level":3,"title":"newCachedThreadPool","slug":"newcachedthreadpool","link":"#newcachedthreadpool","children":[]},{"level":3,"title":"newFixedThreadPool","slug":"newfixedthreadpool","link":"#newfixedthreadpool","children":[]},{"level":3,"title":"newScheduledThreadPool","slug":"newscheduledthreadpool","link":"#newscheduledthreadpool","children":[]},{"level":3,"title":"newSingleThreadExecutor","slug":"newsinglethreadexecutor","link":"#newsinglethreadexecutor","children":[]}]},{"level":2,"title":"线程生命周期及状态","slug":"线程生命周期及状态","link":"#线程生命周期及状态","children":[{"level":3,"title":"线程状态","slug":"线程状态","link":"#线程状态","children":[]},{"level":3,"title":"线程阻塞的三种情况","slug":"线程阻塞的三种情况","link":"#线程阻塞的三种情况","children":[]},{"level":3,"title":"线程死亡的三种方式","slug":"线程死亡的三种方式","link":"#线程死亡的三种方式","children":[]},{"level":3,"title":"终止线程的 4 种方式","slug":"终止线程的-4-种方式","link":"#终止线程的-4-种方式","children":[]}]},{"level":2,"title":"上下文切换","slug":"上下文切换","link":"#上下文切换","children":[{"level":3,"title":"上下文切换活动","slug":"上下文切换活动","link":"#上下文切换活动","children":[]},{"level":3,"title":"上下文切换的原因","slug":"上下文切换的原因","link":"#上下文切换的原因","children":[]}]},{"level":2,"title":"锁","slug":"锁","link":"#锁","children":[{"level":3,"title":"锁的分类","slug":"锁的分类","link":"#锁的分类","children":[]},{"level":3,"title":"锁的优化","slug":"锁的优化","link":"#锁的优化","children":[]},{"level":3,"title":"线程死锁","slug":"线程死锁","link":"#线程死锁","children":[]},{"level":3,"title":"如何避免死锁","slug":"如何避免死锁","link":"#如何避免死锁","children":[]}]},{"level":2,"title":"线程常用方法","slug":"线程常用方法","link":"#线程常用方法","children":[{"level":3,"title":"基本方法","slug":"基本方法","link":"#基本方法","children":[]},{"level":3,"title":"sleep() 和 wait() 的区别","slug":"sleep-和-wait-的区别","link":"#sleep-和-wait-的区别","children":[]},{"level":3,"title":"start() 和 run() 的区别","slug":"start-和-run-的区别","link":"#start-和-run-的区别","children":[]},{"level":3,"title":"ThreadLocal（线程本地存储）","slug":"threadlocal-线程本地存储","link":"#threadlocal-线程本地存储","children":[]},{"level":3,"title":"volatile 和 synchronized 的区别","slug":"volatile-和-synchronized-的区别","link":"#volatile-和-synchronized-的区别","children":[]}]}],"git":{"createdTime":1678429185000,"updatedTime":1678773677000,"contributors":[{"name":"村雨遥","email":"747731461@qq.com","commits":2},{"name":"cunyu1943","email":"747731461@qq.com","commits":1}]},"readingTime":{"minutes":21.08,"words":6323},"filePathRelative":"md/interview/20220805-concurrence.md","localizedDate":"2022年8月5日","excerpt":"<p>作者：村雨遥</p>\\n<p>博客：<a href=\\"https://cunyu1943.github.io/JavaPark\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">JavaPark</a></p>\\n<blockquote>\\n<p>吾生也有涯，而知也无涯。</p>\\n</blockquote>\\n<h2> 进程和线程</h2>\\n<h3> 进程</h3>\\n<p>进程是系统中正在运行的一个程序，是 <strong>资源分配的基本单位，每个进程都有独立的地址空间</strong>。</p>\\n<p>进程控制块（Process Control Block，PCB）描述了进程的基本信息和运行状态，所谓的创建和撤销进程，都是指对于 PCB 的操作；</p>","copyright":{"author":"村雨遥","license":"转载请注明以下信息：『作者：村雨遥，博客：https://cunyu1943.site/JavaPark』"},"autoDesc":true}');export{e as data};
